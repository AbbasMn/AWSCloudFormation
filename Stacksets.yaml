# idea with StackSets is to just save a lot of time to apply operations on many accounts and many regions at a time.

# StackSets Creation
# we're going to deploy StackSets across multiple regions to enable AWS Config within each region. 
# And the idea is that you are going to be able to track the resource configuration over time of all
# your resources within all regions within the same account

# Step 1: create IAM roles (StackSetsAdministrationRole.yaml) So we're giving the administrator the right to basically assume roles 
#         in the target account from which you will be able to deploy StackSets.
# Create a cloudFormation stack => Upload this StackSetsAdministrationRole.yaml

# Step 2: add the trust relationships (Execution Role): StackSetsExecutionRole.yaml
# Note: So this CloudFormation templates must be applied in all the target accounts that you want to use the StackSets feature in.
# This is an initial setup that you cannot avoid unless you are using AWS organizations.

# Step 3: Creat a new stack and apply/update StackSetsExecutionRole.yaml template 
# It connects and StackSetExecutionRole Now aks for the ParamAdministratorAccountId
# Copy-Past Account ID from AWS Console => Top Right Menu => My account

# Step 4:  StackSets => Create StackSets => we will use this StackSetsEnableAwsConfigAcrossAccounts.yaml template and deploy it now as part of our StackSet.
#   - Permissions => IAM admin role ARN => look for: AWSCloudFormationStackSetAdministrationRole
#   - Permissions => IAM execution role name => look for: AWSCloudFormationStackSetExecutionRole
#   - Account numbers =>  Copy-Past Account ID from AWS Console => Top Right Menu => My account
#   - Specify regions => add 2 regions or more
#   - Deployment options => Maximum concurrent accounts:1 & Region Concurrency:Parallel

# Step 5: after StackSets created => go to each region and see the created StackSets overthere


# StackSets Update & Drift Detection
# Note: if you decide to make a change through CloudFormation to a stack directly, so not another StackSet level, 
# but you go in CloudFormation and you do an update to one stack, then this is considered a drift. This is considered 
# a normal change because it was managed through CloudFormation. 
# So this is a very important to know. although never recommend to do an update to a stack directly without 
# using the StackSet update operation. And you can stop drift detection on the StackSet if you wanted to, in case it takes too long.


# SatckSets Delete
# Note: To delete the stacksets, you first need to delete all the stacks within your stacksets.
# So, we have two options to delete the instances. 

#   1.For example, say, "I wanted to detach this stack right here in eu-central1, because I wanna keep it, regardless of whether or not I 
#     delete my StackSets." So, to do so, I'm going to Actions and then I will <<delete stacks from the StackSets>>.
#     I will paste the account number and it will say, "Hey for this region. For the Frankfurt region, you're going to delete the stack from the StackSets,
#     but I want you to actually retain the stack." So, the idea is that is going to remove this stack from the StackSets, but the stack will still exist 
#     in my account.


#   2.Then if I wanted to delete really everything. I could do Actions and then <<delete stack from StackSets>>. So, same account number, 
#     and I will add all regions, and it will say, "You can do it in parallel." And this time I will choose to delete the stack.
#     And now this is actually going to go through the deletion of the underlying stacks in CloudFormation StackSets. So, this can take a 
#     little bit of time to run, obviously, because now we are actually deleting the stacks. Now that all my stack instances are gone from my 
#     StackSets, what I can do is Action. Delete StackSet. Press Yes. And we're good to go.

# If you wanted to truly clean up again you also need to delete all the execution roles you have created from before. So, let's <<Delete StackSets>>
# that was just detached from my StackSets. And then I can delete all the execution roles that we created from before, as well as the admin role.
